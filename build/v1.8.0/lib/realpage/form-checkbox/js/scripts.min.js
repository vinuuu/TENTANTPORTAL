angular.module("rpFormCheckbox",[]),function(e,n){"use strict";e.module("rpFormCheckbox").directive("rpFormCheckbox",["$parse","$compile","rpFormCheckboxHtml",function(r,o,t){var a=0;return{link:function(u,c,l,s){var i,p,d,f={},g={},m="blur.rpFormCheckbox"+ ++a,b="click.rpFormCheckbox"+a,v="focus.rpFormCheckbox"+a;f.setInstanceName=function(){d=l.rpInstanceName?l.rpInstanceName:"rpFormCheckbox"+a},f.exposeInstance=function(){return f.setInstanceName(),u[d]=f,f},f.decorate=function(){return i=t.wrap(d),p=t.inner(d),l.rpWrapperClass&&i.addClass(l.rpWrapperClass),o(i)(u),o(p)(u),c.wrap(i).parent().append(p),f},f.bindEvents=function(){return c.on(v,f.onFocus),p.on(b,f.toggleValue),f},f.toggleValue=function(){if(!f.isDisabled()){var e=l.required,o=r(l.ngModel),t=f.getTrueValue(),a=r(l.ngChange),i=e?n:f.getFalseValue(),p=s.$modelValue==t?i:t;g.focus||c.trigger(v),u.$apply(function(){o.assign(u,p),a(u)})}},f.isDisabled=function(){return!0===u.$eval(l.ngDisabled)},f.onFocus=function(){u.$apply(function(){g.focus=!0,i.addClass("focus"),c.on(m,f.onBlur)})},f.onBlur=function(){u.$apply(function(){c.off(m),g.focus=!1,i.removeClass("focus")})},f.getTrueValue=function(){var e=u.$eval(l.ngTrueValue);return e===n||e},f.getFalseValue=function(){var e=u.$eval(l.ngFalseValue);return e!==n&&e},f.getState=function(){return g.disabled=f.isDisabled(),s&&e.extend(g,{error:s.$invalid,touched:s.$touched,required:s.$required,checked:s.$modelValue===f.getTrueValue()}),g},f.state=g,f.exposeInstance().decorate().bindEvents()},restrict:"C",require:"ngModel"}}])}(angular),function(e){"use strict";e.module("rpFormCheckbox").factory("rpFormCheckboxHtml",[function(){var n={};return n.wrap=function(){return e.element("<div class='rp-checkbox'></div>")},n.inner=function(n){var r="<div class='rp-checkbox-inner' ng-class='"+n+".getState()'></div>";return e.element(r)},n}])}(angular);
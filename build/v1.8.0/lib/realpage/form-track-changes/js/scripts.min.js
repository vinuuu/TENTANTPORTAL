angular.module("rpFormTrackChanges",[]),angular.module("rpFormTrackChanges").run(["$templateCache",function(n){n.put("realpage/form-track-changes/templates/unsaved-changes-alert-modal.html",'<div class="rp-modal-wrap"><div class="rp-modal" ng-click="$hide()"><div class="rp-modal-dialog rp-unsaved-changes-modal" rp-stop-event="click"><div class="rp-modal-header"><span class="rp-modal-close" ng-click="$hide()"></span><h2 class="rp-modal-header-title">Unsaved Changes</h2></div><div class="rp-modal-content"><p>You are leaving without saving your changes.</p><p>Do you wish to continue?</p></div><div class="rp-modal-footer"><div class="rp-modal-footer-btns"><button ng-click="$hide()" ng-click="unsavedChanges.denyChange()" class="btn rounded btn-outline b-primary text-primary">Cancel</button> <button class="btn rounded primary" ng-click="unsavedChanges.allowChange()">Continue</button></div></div></div></div></div>')}]),function(n,e){"use strict";n.module("rpFormTrackChanges").directive("rpTrackFormChanges",["timeout","rpUnsavedChanges",function(t,a){var o="change.trackFormChanges";return{link:function(t,r,i){var c={disableAlert:n.noop};c.init=function(){c.alertEnabled=!1,t.rpTrackFormChanges=c,r.on(o,c.onChange),c.destWatch=t.$on("$destroy",c.destroy)},c.setData=function(e){return c.form=e,c.cleanForm=n.copy(e),c},c.onChange=function(){t.$apply(c.checkState)},c.isDirty=function(){return!n.equals(c.form,c.cleanForm)},c.checkState=function(){c.isDirty()&&!c.alertEnabled?(c.alertEnabled=!0,c.disableAlert=a.enableAlert()):c.alertEnabled&&!c.isDirty()&&c.reset()},c.reset=function(){c.disableAlert(),c.alertEnabled=!1,c.disableAlert=n.noop},c.destroy=function(){c.reset(),c.destWatch(),r.off(o),c=e,r=e,i=e,t=e},c.init()},restrict:"A"}}])}(angular),function(n){"use strict";n.module("rpFormTrackChanges").directive("rpUnsavedChangesModal",["rpUnsavedChanges",function(n){return{link:function(e,t,a){var o={};o.init=function(){e.unsavedChanges=o},o.allowChange=function(){e.$hide(),n.onUserAction("continue")},o.denyChange=function(){e.$hide(),n.onUserAction("cancel")},o.init()},restrict:"C"}}])}(angular),function(n){"use strict";n.module("rpFormTrackChanges").factory("rpUnsavedChanges",["$state","$window","$rootScope","rpModalModel",function(e,t,a,o){var r,i=1;return r={nextUrl:"",nextState:"",changesList:[],skipCheck:!1},r.init=function(){return r.setDialog().watchStateChange().watchWindowUnload().watchLocationChange().watchRpAppStateChange(),r},r.setDialog=function(){return r.dialog=o("realpage/form-track-changes/templates/unsaved-changes-alert-modal.html"),r},r.watchStateChange=function(){return a.$on("$stateChangeStart",r.onStateChange),r},r.watchWindowUnload=function(){return n.element(t).on("beforeunload.unsavedChanges",r.onWindowUnload),r},r.watchLocationChange=function(){return a.$on("$locationChangeStart",r.onLocationChange),r},r.watchRpAppStateChange=function(n){return a.$on("rpAppStateChange",r.onRpAppStateChange),r},r.onStateChange=function(n,e){r.hasChanges()&&!r.skipCheck&&(n.preventDefault(),r.nextState=e.name,r.alertUser())},r.onWindowUnload=function(){if(r.hasChanges())return"You are leaving without saving your changes. Do you wish to continue?"},r.onLocationChange=function(n,e){r.hasChanges()&&!r.skipCheck&&(n.preventDefault(),r.nextUrl=e,r.alertUser())},r.onRpAppStateChange=function(e,t){var a={onCancel:n.noop,onContinue:n.noop};r.hasChanges()&&!r.skipCheck&&(e.preventDefault(),r.rpStateChange=n.extend({},a,t),r.alertUser())},r.enableAlert=function(){var n={id:"change"+i++};return r.skipCheck=!1,r.changesList.push(n),function(){r.changesList=r.changesList.filter(function(e){return e.id!==n.id})}},r.disableAlert=function(){return r.changesList.flush(),r},r.onUserAction=function(n){"continue"==n?(r.skipCheck=!0,r.disableAlert().allowChange()):"cancel"==n&&(r.skipCheck=!1,r.denyChange())},r.allowChange=function(){r.nextUrl?(r.goToUrl(r.nextUrl),r.nextUrl=""):r.nextState?(r.goToState(r.nextState),r.nextState=""):r.rpStateChange&&(r.rpStateChange.onContinue(),r.rpStateChange="")},r.denyChange=function(){r.rpStateChange&&r.rpStateChange.onCancel()},r.goToUrl=function(n){t.location.href=n},r.goToState=function(n){e.go(n)},r.hasChanges=function(){return 0!==r.changesList.length},r.alertUser=function(){r.dialog.show()},r}])}(angular),function(n){"use strict";n.module("rpFormTrackChanges").run(["rpUnsavedChanges",function(n){n.init()}])}(angular);
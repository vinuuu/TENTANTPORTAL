angular.module("rpFormCheckbox",[]),function(e,n){"use strict";function r(r,o,t){function a(a,c,i,l){var s,p,d,f={},g={},m="blur.rpFormCheckbox"+ ++u,b="click.rpFormCheckbox"+u,v="focus.rpFormCheckbox"+u;f.setInstanceName=function(){d=i.rpInstanceName?i.rpInstanceName:"rpFormCheckbox"+u},f.exposeInstance=function(){return f.setInstanceName(),a[d]=f,f},f.decorate=function(){return s=t.wrap(d),p=t.inner(d),i.rpWrapperClass&&s.addClass(i.rpWrapperClass),o(s)(a),o(p)(a),c.wrap(s).parent().append(p),f},f.bindEvents=function(){return c.on(v,f.onFocus),p.on(b,f.toggleValue),f},f.toggleValue=function(){if(!f.isDisabled()){var e=i.required,o=r(i.ngModel),t=f.getTrueValue(),u=r(i.ngChange),s=e?n:f.getFalseValue(),p=l.$modelValue==t?s:t;g.focus||c.trigger(v),a.$apply(function(){o.assign(a,p),u(a)})}},f.isDisabled=function(){return!0===a.$eval(i.ngDisabled)},f.onFocus=function(){a.$apply(function(){g.focus=!0,s.addClass("focus"),c.on(m,f.onBlur)})},f.onBlur=function(){a.$apply(function(){c.off(m),g.focus=!1,s.removeClass("focus")})},f.getTrueValue=function(){var e=a.$eval(i.ngTrueValue);return e===n||e},f.getFalseValue=function(){var e=a.$eval(i.ngFalseValue);return e!==n&&e},f.getState=function(){return g.disabled=f.isDisabled(),l&&e.extend(g,{error:l.$invalid,touched:l.$touched,required:l.$required,checked:l.$modelValue===f.getTrueValue()}),g},function(){f.state=g,f.exposeInstance().decorate().bindEvents()}()}var u=0;return{link:a,restrict:"C",require:"ngModel"}}e.module("rpFormCheckbox").directive("rpFormCheckbox",["$parse","$compile","rpFormCheckboxHtml",r])}(angular),function(e){"use strict";function n(){var n={};return n.wrap=function(){return e.element("<div class='rp-checkbox'></div>")},n.inner=function(n){var r="<div class='rp-checkbox-inner' ng-class='"+n+".getState()'></div>";return e.element(r)},n}e.module("rpFormCheckbox").factory("rpFormCheckboxHtml",[n])}(angular);
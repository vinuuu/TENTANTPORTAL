!function(){"use strict";function a(a,b,c){var d,e=this;e.init=function(){c.setSrc(e),e.model=d=a.init()},e.onPayAmount=function(a){d.onPayAmount(a)},e.init()}angular.module("uam").controller("invoiceCtrl",a),a.$inject=["invoiceMdl","$stateParams","invoiceGrid1Config"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i,j,k,l,m,n){var o,p={},q=c(),r=e("viewpay").translate,s=h(),t=d(),u={currentPage:0,pagesPerGroup:5,recordsPerPage:6,currentPageGroup:0};return p.toggleGridState=function(a){return a?(p.apiReady=!1,o.busy()):(p.apiReady=!0,o.off()),p},p.invoicesCount=function(){return p.getSelectedList().length},p.getSelectedList=function(){return g.where(p.grid.data.records,{isSelect:!0})},p.TotalPaidAmount=function(){return g.reduce(g.pluck(g.where(p.grid.data.records,{isSelect:!0}),"TOTALPAYING"),function(a,b){return Number(a||0)+Number(b||0)})},p.onPayAmount=function(a){a.isSelect=Number(a.TOTALPAYING)>0,p.TotalPaidAmount()},p.init=function(){p.formConfig=a,p.totalCount=0,o=p.busyIndicator=j(),a.setMethodsSrc(p);var c=[{paymentTypeName:"All Transaction",paymentTypeNameID:""},{paymentTypeName:"Paid",paymentTypeNameID:"Paid"},{paymentTypeName:"Due for payment",paymentTypeNameID:"Due for payment"}];return a.setOptions("paymentType",c),p.paymenttype="",p.grid=q,t.watch(q),q.setConfig(b),s.setGrid(q).trackSelection(b.getTrackSelectionConfig()),s.setConfig(u),p.gridPagination=s,q.formConfig=a,p.loadData(),p},p.translateNames=function(a){return r(a)},p.onPaymentTypeSelection=function(a){p.bindGrid()},p.onLeaseSelection=function(a){p.bindGrid()},p.setData=function(a){s.setData(a.records).goToPage({number:0})},p.loadData=function(){p.toggleGridState(!0),k.all([f.getInvoiceList(m.invoiceListTransactionInput(p.leasevalueID,p.paymenttype)),l.getLeaseList(m.LeaseIDBinding())]).catch(m.error).then(function(b){p.toggleGridState(!1),b&&b.length>0&&(p.totalCount=b[0].data.length,p.leaseArray=[],p.leaseArray.push({leaseID:"",leaseName:"All"}),b[0].data.forEach(function(a){a.disableSelection="Paid"===a.STATE}),p.leaseArray.push({leaseID:"",leaseName:"All"}),b[1].data.forEach(function(a){p.leaseArray.push({leaseID:a.LEASEID,leaseName:a.LEASEID})}),a.setOptions("leaseddl",p.leaseArray),p.leasevalueID="",p.setData({records:b[0].data}))})},p.bindGrid=function(){p.toggleGridState(!0),f.getInvoiceList(m.invoiceListTransactionInput(p.leasevalueID,p.paymenttype)).then(function(a){p.toggleGridState(!1),p.totalCount=a.data.length,a.data.forEach(function(a){a.disableSelection="Paid"===a.STATE}),p.setData({records:a.data})}).catch(function(a){p.toggleGridState(!1)})},p}angular.module("ui").factory("invoiceMdl",a),a.$inject=["invoiceSelectMenuFormConfig","invoiceGrid1Config","rpGridModel","rpGridTransform","appLangTranslate","invoiceSvc","underscore","rpGridPaginationModel","$timeout","rpBusyIndicatorModel","$q","dashboardSvc","baseModel","$stateParams"]}(),function(){"use strict";function a(a){return{getInvoiceList:function(b){return a.post("/api/viewPay",b)}}}angular.module("uam").factory("invoiceSvc",a),a.$inject=["$http"]}(),angular.module("ui").run(["$templateCache",function(a){a.put("home/invoice/templates/checkbox.html",""),a.put("home/invoice/templates/labelStatus.html",'<div class="grid-edit-title">dddd <span style="color:red">haiiii</span></div>'),a.put("home/invoice/templates/textbox.html",'<div class="grid-edit-title"><rp-form-input-text config="model.formConfig.lease" rp-model="record[config.key]"></rp-form-input-text></div>')}]),function(a){"use strict";function b(a){var b=a();return b.get=function(){return[{key:"isSelect",type:"select",idKey:"id"},{key:"RECORDID"},{key:"WHENCREATED"},{key:"LEASEID"},{key:"UNITID"},{key:"TOTALENTERED",type:"currency"},{key:"TOTALDUE",type:"currency"},{key:"TOTALPAYING",type:"custom",templateUrl:"app/templates/textbox.html",onPayAmount:b.getMethod("onPayAmount")},{key:"STATE",type:"custom",templateUrl:"app/templates/label.html"}]},b.getHeaders=function(){return[[{key:"isSelect",type:"select",enabled:!1},{key:"RECORDID",text:"Invoice"},{key:"WHENCREATED",text:"Date"},{key:"LEASEID",text:"Lease ID"},{key:"UNITID",text:"Unit ID"},{key:"TOTALENTERED",text:"Amount"},{key:"TOTALDUE",text:"Amount Due"},{key:"TOTALPAYING",text:"Pay Amount"},{key:"STATE",text:"Status"}]]},b.getFilters=function(){return[{key:"isSelect",value:"",type:"menu",options:[{value:"",name:"All"},{value:!0,name:"Selected"},{value:!1,name:"Not Selected"}]},{key:"RECORDID",type:"text",filterDelay:0,placeholder:"Filter by Invoice"},{key:"WHENCREATED",type:"text",filterDelay:0,placeholder:"Filter by Date"},{key:"LEASEID",type:"text",filterDelay:0,placeholder:"Lease ID"},{key:"UNITID",type:"text",filterDelay:0,placeholder:"Filter by Unit ID"},{key:"TOTALENTERED",type:"text",filterDelay:0,placeholder:"Filter by Amount"},{key:"TOTALDUE",type:"text",filterDelay:0,placeholder:"Filter by Amount Due"},{key:"TOTALPAYING",type:"text",filterDelay:0,placeholder:"Filter by Pay Amount"},{key:"STATE",type:"text",filterDelay:0,placeholder:"Filter by STATE"}]},b.getTrackSelectionConfig=function(){var a={};return b.get().forEach(function(b){"select"==b.type&&(a.idKey=b.idKey,a.selectKey=b.key)}),a},b}a.module("ui").factory("invoiceGrid1Config",["rpGridConfig",b])}(angular),function(a){"use strict";function b(a,b,c){var d=a();return d.paymentType=b({nameKey:"paymentTypeName",valueKey:"paymentTypeNameID",onChange:d.getMethod("onPaymentTypeSelection")}),d.leaseddl=b({nameKey:"leaseName",valueKey:"leaseID",onChange:d.getMethod("onLeaseSelection")}),d.payAmount=c({id:"Pay Amount",fieldName:"Pay Amount",onBlur:d.getMethod("onPayAmount")}),d.setOptions=function(a,b){if(!d[a])return d;d[a].setOptions(b)},d}a.module("ui").factory("invoiceSelectMenuFormConfig",["baseFormConfig","rpFormSelectMenuConfig","rpFormInputTextConfig",b])}(angular);
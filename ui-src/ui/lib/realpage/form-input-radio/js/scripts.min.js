!function(n,a){"use strict";n.module("rpInputRadio").directive("rpFormInputRadio",["timeout","rpFormInputRadioConfig",function(n,a){function t(n){n.config=n.config||a(),n.rpValue&&(n.config.data.value=n.rpValue)}function e(a,t){var e={};e.init=function(){a.radio=e,e.destWatch=a.$on("$destroy",e.destroy)},e.getState=function(){return{"has-label":!!a.rpLabelText}},e.onChange=function(){n(e.changeHandler)},e.changeHandler=function(){a.config.data.onChange(a.rpModel),a.rpOnChange()},e.destroy=function(){e.destWatch(),t.off("change.rpFormInputRadio")},e.init()}return{scope:{config:"=?",rpModel:"=",rpValue:"=?",rpOnChange:"&",rpLabelText:"=?"},restrict:"E",replace:!0,compile:function(){return{pre:t,post:e}},templateUrl:"realpage/form-input-radio/templates/input-radio.html"}}])}(angular),function(n,a){"use strict";n.module("rpFormInputRadio").factory("rpFormInputRadioConfig",[function(){function t(){this.init()}var e=1,o=t.prototype;return o.init=function(){this.data={value:"",name:"radio",ngValue:"sample",onChange:n.noop,id:"rp-radio-"+e++}},o.setData=function(a){var t=this;return n.extend(t.data,a||{}),t},o.destroy=function(){this.data=a},function(n){return(new t).setData(n)}}])}(angular),angular.module("rpFormInputRadio").run(["$templateCache",function(n){n.put("realpage/form-input-radio/templates/input-radio.html",'<div class="rp-form-input-radio" ng-class="radio.getState()"><label class="rp-form-input-radio-btn"><input type="radio" ng-model="rpModel" id="{{config.data.id}}" name="{{config.data.name}}" ng-value="config.data.value" ng-change="radio.onChange(rpModel)"> <i></i></label><label class="rp-form-input-radio-label" for="{{config.data.id}}">{{rpLabelText}}</label></div>')}]);
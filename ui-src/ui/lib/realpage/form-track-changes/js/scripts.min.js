angular.module("rpFormTrackChanges",[]),angular.module("rpFormTrackChanges").run(["$templateCache",function(n){n.put("realpage/form-track-changes/templates/unsaved-changes-alert-modal.html",'<div class="modal rp-unsaved-changes-modal am-fade-and-slide-top" tabindex="-1" role="dialog"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" ng-click="$hide()">Ã—</button><h4 class="modal-title">Unsaved Changes</h4></div><div class="modal-body"><p>You are leaving without saving your changes.</p><p>Do you wish to continue?</p></div><div class="modal-footer"><button type="button" class="btn btn-default" ng-click="unsavedChanges.denyChange()">Cancel</button> <button type="button" class="btn btn-primary" ng-click="unsavedChanges.allowChange()">Continue</button></div></div></div></div>')}]),function(n){"use strict";function t(t,e){function a(a,o,i){var r={watchList:e(),disableAlert:n.noop};r.init=function(){var n=i.name+".$dirty",t=a.$watch(n,r.checkState);r.watchList.add(t),t=a.$on("$destroy",r.destroy),r.watchList.add(t)},r.checkState=function(e){e&&r.disableAlert==n.noop?r.disableAlert=t.enableAlert():(r.disableAlert(),r.disableAlert=n.noop)},r.destroy=function(){r.watchList.destroy()},r.init()}return{link:a,restrict:"A"}}n.module("rpFormTrackChanges").directive("rpTrackFormChanges",["rpUnsavedChanges","rpWatchList",t])}(angular),function(n){"use strict";function t(n){function t(t,e,a){var o={};o.init=function(){t.unsavedChanges=o},o.allowChange=function(){t.$hide(),n.onUserAction("continue")},o.denyChange=function(){t.$hide(),n.onUserAction("cancel")},o.init()}return{link:t,restrict:"C"}}n.module("rpFormTrackChanges").directive("rpUnsavedChangesModal",["rpUnsavedChanges",t])}(angular),function(n){"use strict";function t(t,e,a,o){var i,r=1;return i={nextUrl:"",nextState:"",changesList:[],skipCheck:!1},i.init=function(){return i.setDialog().watchStateChange().watchWindowUnload().watchLocationChange().watchRpAppStateChange(),i},i.setDialog=function(){return i.dialog=o({show:!1,templateUrl:"realpage/form-track-changes/templates/unsaved-changes-alert-modal.html"}),i},i.watchStateChange=function(){return a.$on("$stateChangeStart",i.onStateChange),i},i.watchWindowUnload=function(){return n.element(e).on("beforeunload.unsavedChanges",i.onWindowUnload),i},i.watchLocationChange=function(){return a.$on("$locationChangeStart",i.onLocationChange),i},i.watchRpAppStateChange=function(n){return a.$on("rpAppStateChange",i.onRpAppStateChange),i},i.onStateChange=function(n,t){i.hasChanges()&&!i.skipCheck&&(n.preventDefault(),i.nextState=t.name,i.alertUser())},i.onWindowUnload=function(){if(i.hasChanges())return"You are leaving without saving your changes. Do you wish to continue?"},i.onLocationChange=function(n,t){i.hasChanges()&&!i.skipCheck&&(n.preventDefault(),i.nextUrl=t,i.alertUser())},i.onRpAppStateChange=function(t,e){var a={onCancel:n.noop,onContinue:n.noop};i.hasChanges()&&!i.skipCheck&&(t.preventDefault(),i.rpStateChange=n.extend({},a,e),i.alertUser())},i.enableAlert=function(){var n={id:"change"+r++};return i.skipCheck=!1,i.changesList.push(n),function(){i.changesList=i.changesList.filter(function(t){return t.id!==n.id})}},i.disableAlert=function(){return i.changesList.flush(),i},i.onUserAction=function(n){"continue"==n?(i.skipCheck=!0,i.disableAlert().allowChange()):"cancel"==n&&(i.skipCheck=!1,i.denyChange())},i.allowChange=function(){i.nextUrl?(i.goToUrl(i.nextUrl),i.nextUrl=""):i.nextState?(i.goToState(i.nextState),i.nextState=""):i.rpStateChange&&(i.rpStateChange.onContinue(),i.rpStateChange="")},i.denyChange=function(){i.rpStateChange&&i.rpStateChange.onCancel()},i.goToUrl=function(n){e.location.href=n},i.goToState=function(n){t.go(n)},i.hasChanges=function(){return 0!==i.changesList.length},i.alertUser=function(){i.dialog.show()},i}n.module("rpFormTrackChanges").factory("rpUnsavedChanges",["$state","$window","$rootScope","$modal",t])}(angular),function(n){"use strict";function t(n){n.init()}n.module("rpFormTrackChanges").run(["rpUnsavedChanges",t])}(angular);